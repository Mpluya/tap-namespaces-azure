#@ load("@ytt:data", "data")
#@ def in_list(key, list):
#@  return hasattr(data.values.tap_values, key) and (data.values.tap_values[key] in list)
#@ end
#@ if/end in_list('supply_chain', ['testing', 'testing_scanning']) and in_list('profile', ['full', 'iterate', 'build']) and hasattr(data.values, "pipelines") and 'slack' in data.values.pipelines:
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: developer-defined-tekton-pipeline-slack
  labels:
    apps.tanzu.vmware.com/pipeline: test
    apps.tanzu.vmware.com/language: slack
spec:
  params:
    - name: source-url
    - name: source-revision
  tasks:
    - name: test
      params:
        - name: source-url
          value: $(params.source-url)
        - name: source-revision
          value: $(params.source-revision)
      taskSpec:
        params:
          - name: source-url
          - name: source-revision
        steps:
          - name: test
            image: cxscssa.azurecr.io/utils/module-detector-pipeline-image:0.5.0
            script: |-
              cd `mktemp -d`
              wget -qO- $(params.source-url) | tar xvz -m
              pwd
              ls -al
              cd config/mae/workload-with-git-sha/dev
              pwd
              
              yaml_file="delivery.yml"
              
              git_sha_value=$(yq e '. | select(.kind == "Deployment") | .spec.template.metadata.annotations."apps.tanzu.vmware.com/git-sha"' "$yaml_file")
              echo $git_sha_value
    - name: slack
      params:
        - name: webhook-secret
          value: webhook-secret
        - name: message
          value: "Hello from Tekton!"
      taskRef:
        name: send-to-webhook-slack